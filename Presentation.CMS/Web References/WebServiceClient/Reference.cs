//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.17929.
// 
#pragma warning disable 1591

namespace Presentation.CMS.WebServiceClient {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BrowserSoap", Namespace="http://tempuri.org/")]
    public partial class Browser : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback VersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddDirectoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback RenameDirectoryNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback RenameDirectoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDirectoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDirectoryNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDirectoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback JSONOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback RenameFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFileNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExistsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Browser() {
            this.Url = global::Presentation.CMS.Properties.Settings.Default.Presentation_CMS_WebServiceClient_Browser;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event VersionCompletedEventHandler VersionCompleted;
        
        /// <remarks/>
        public event AddDirectoryCompletedEventHandler AddDirectoryCompleted;
        
        /// <remarks/>
        public event RenameDirectoryNameCompletedEventHandler RenameDirectoryNameCompleted;
        
        /// <remarks/>
        public event RenameDirectoryCompletedEventHandler RenameDirectoryCompleted;
        
        /// <remarks/>
        public event DeleteDirectoryCompletedEventHandler DeleteDirectoryCompleted;
        
        /// <remarks/>
        public event DeleteDirectoryNameCompletedEventHandler DeleteDirectoryNameCompleted;
        
        /// <remarks/>
        public event GetDirectoryCompletedEventHandler GetDirectoryCompleted;
        
        /// <remarks/>
        public event JSONCompletedEventHandler JSONCompleted;
        
        /// <remarks/>
        public event UploadFileCompletedEventHandler UploadFileCompleted;
        
        /// <remarks/>
        public event RenameFileCompletedEventHandler RenameFileCompleted;
        
        /// <remarks/>
        public event DeleteFileCompletedEventHandler DeleteFileCompleted;
        
        /// <remarks/>
        public event DeleteFileNameCompletedEventHandler DeleteFileNameCompleted;
        
        /// <remarks/>
        public event ExistsCompletedEventHandler ExistsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Version", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Version() {
            object[] results = this.Invoke("Version", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VersionAsync() {
            this.VersionAsync(null);
        }
        
        /// <remarks/>
        public void VersionAsync(object userState) {
            if ((this.VersionOperationCompleted == null)) {
                this.VersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVersionOperationCompleted);
            }
            this.InvokeAsync("Version", new object[0], this.VersionOperationCompleted, userState);
        }
        
        private void OnVersionOperationCompleted(object arg) {
            if ((this.VersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VersionCompleted(this, new VersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddDirectory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddDirectory(int _wid, string _wval, string _site_relative_dir, string _name) {
            object[] results = this.Invoke("AddDirectory", new object[] {
                        _wid,
                        _wval,
                        _site_relative_dir,
                        _name});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddDirectoryAsync(int _wid, string _wval, string _site_relative_dir, string _name) {
            this.AddDirectoryAsync(_wid, _wval, _site_relative_dir, _name, null);
        }
        
        /// <remarks/>
        public void AddDirectoryAsync(int _wid, string _wval, string _site_relative_dir, string _name, object userState) {
            if ((this.AddDirectoryOperationCompleted == null)) {
                this.AddDirectoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddDirectoryOperationCompleted);
            }
            this.InvokeAsync("AddDirectory", new object[] {
                        _wid,
                        _wval,
                        _site_relative_dir,
                        _name}, this.AddDirectoryOperationCompleted, userState);
        }
        
        private void OnAddDirectoryOperationCompleted(object arg) {
            if ((this.AddDirectoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddDirectoryCompleted(this, new AddDirectoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RenameDirectoryName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RenameDirectoryName(int _wid, string _wval, string _site_relative_dir, string _name_old, string _name_new) {
            object[] results = this.Invoke("RenameDirectoryName", new object[] {
                        _wid,
                        _wval,
                        _site_relative_dir,
                        _name_old,
                        _name_new});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RenameDirectoryNameAsync(int _wid, string _wval, string _site_relative_dir, string _name_old, string _name_new) {
            this.RenameDirectoryNameAsync(_wid, _wval, _site_relative_dir, _name_old, _name_new, null);
        }
        
        /// <remarks/>
        public void RenameDirectoryNameAsync(int _wid, string _wval, string _site_relative_dir, string _name_old, string _name_new, object userState) {
            if ((this.RenameDirectoryNameOperationCompleted == null)) {
                this.RenameDirectoryNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRenameDirectoryNameOperationCompleted);
            }
            this.InvokeAsync("RenameDirectoryName", new object[] {
                        _wid,
                        _wval,
                        _site_relative_dir,
                        _name_old,
                        _name_new}, this.RenameDirectoryNameOperationCompleted, userState);
        }
        
        private void OnRenameDirectoryNameOperationCompleted(object arg) {
            if ((this.RenameDirectoryNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RenameDirectoryNameCompleted(this, new RenameDirectoryNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RenameDirectory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RenameDirectory(int _wid, string _wval, string _site_relative_dir, string _name_new) {
            object[] results = this.Invoke("RenameDirectory", new object[] {
                        _wid,
                        _wval,
                        _site_relative_dir,
                        _name_new});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RenameDirectoryAsync(int _wid, string _wval, string _site_relative_dir, string _name_new) {
            this.RenameDirectoryAsync(_wid, _wval, _site_relative_dir, _name_new, null);
        }
        
        /// <remarks/>
        public void RenameDirectoryAsync(int _wid, string _wval, string _site_relative_dir, string _name_new, object userState) {
            if ((this.RenameDirectoryOperationCompleted == null)) {
                this.RenameDirectoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRenameDirectoryOperationCompleted);
            }
            this.InvokeAsync("RenameDirectory", new object[] {
                        _wid,
                        _wval,
                        _site_relative_dir,
                        _name_new}, this.RenameDirectoryOperationCompleted, userState);
        }
        
        private void OnRenameDirectoryOperationCompleted(object arg) {
            if ((this.RenameDirectoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RenameDirectoryCompleted(this, new RenameDirectoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteDirectory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteDirectory(int _wid, string _wval, string _site_relative_dir) {
            object[] results = this.Invoke("DeleteDirectory", new object[] {
                        _wid,
                        _wval,
                        _site_relative_dir});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDirectoryAsync(int _wid, string _wval, string _site_relative_dir) {
            this.DeleteDirectoryAsync(_wid, _wval, _site_relative_dir, null);
        }
        
        /// <remarks/>
        public void DeleteDirectoryAsync(int _wid, string _wval, string _site_relative_dir, object userState) {
            if ((this.DeleteDirectoryOperationCompleted == null)) {
                this.DeleteDirectoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDirectoryOperationCompleted);
            }
            this.InvokeAsync("DeleteDirectory", new object[] {
                        _wid,
                        _wval,
                        _site_relative_dir}, this.DeleteDirectoryOperationCompleted, userState);
        }
        
        private void OnDeleteDirectoryOperationCompleted(object arg) {
            if ((this.DeleteDirectoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDirectoryCompleted(this, new DeleteDirectoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteDirectoryName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteDirectoryName(int _wid, string _wval, string _site_relative_dir, string _name) {
            object[] results = this.Invoke("DeleteDirectoryName", new object[] {
                        _wid,
                        _wval,
                        _site_relative_dir,
                        _name});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDirectoryNameAsync(int _wid, string _wval, string _site_relative_dir, string _name) {
            this.DeleteDirectoryNameAsync(_wid, _wval, _site_relative_dir, _name, null);
        }
        
        /// <remarks/>
        public void DeleteDirectoryNameAsync(int _wid, string _wval, string _site_relative_dir, string _name, object userState) {
            if ((this.DeleteDirectoryNameOperationCompleted == null)) {
                this.DeleteDirectoryNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDirectoryNameOperationCompleted);
            }
            this.InvokeAsync("DeleteDirectoryName", new object[] {
                        _wid,
                        _wval,
                        _site_relative_dir,
                        _name}, this.DeleteDirectoryNameOperationCompleted, userState);
        }
        
        private void OnDeleteDirectoryNameOperationCompleted(object arg) {
            if ((this.DeleteDirectoryNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDirectoryNameCompleted(this, new DeleteDirectoryNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDirectory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BrowserDirectory GetDirectory(int _wid, string _wval, string _site_relative_dir) {
            object[] results = this.Invoke("GetDirectory", new object[] {
                        _wid,
                        _wval,
                        _site_relative_dir});
            return ((BrowserDirectory)(results[0]));
        }
        
        /// <remarks/>
        public void GetDirectoryAsync(int _wid, string _wval, string _site_relative_dir) {
            this.GetDirectoryAsync(_wid, _wval, _site_relative_dir, null);
        }
        
        /// <remarks/>
        public void GetDirectoryAsync(int _wid, string _wval, string _site_relative_dir, object userState) {
            if ((this.GetDirectoryOperationCompleted == null)) {
                this.GetDirectoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDirectoryOperationCompleted);
            }
            this.InvokeAsync("GetDirectory", new object[] {
                        _wid,
                        _wval,
                        _site_relative_dir}, this.GetDirectoryOperationCompleted, userState);
        }
        
        private void OnGetDirectoryOperationCompleted(object arg) {
            if ((this.GetDirectoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDirectoryCompleted(this, new GetDirectoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/JSON", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string JSON(int _wid, string _wval, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] f, string _name) {
            object[] results = this.Invoke("JSON", new object[] {
                        _wid,
                        _wval,
                        f,
                        _name});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void JSONAsync(int _wid, string _wval, byte[] f, string _name) {
            this.JSONAsync(_wid, _wval, f, _name, null);
        }
        
        /// <remarks/>
        public void JSONAsync(int _wid, string _wval, byte[] f, string _name, object userState) {
            if ((this.JSONOperationCompleted == null)) {
                this.JSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnJSONOperationCompleted);
            }
            this.InvokeAsync("JSON", new object[] {
                        _wid,
                        _wval,
                        f,
                        _name}, this.JSONOperationCompleted, userState);
        }
        
        private void OnJSONOperationCompleted(object arg) {
            if ((this.JSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.JSONCompleted(this, new JSONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UploadFile(int _wid, string _wval, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] f, string _site_relative_dir, string _name) {
            object[] results = this.Invoke("UploadFile", new object[] {
                        _wid,
                        _wval,
                        f,
                        _site_relative_dir,
                        _name});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UploadFileAsync(int _wid, string _wval, byte[] f, string _site_relative_dir, string _name) {
            this.UploadFileAsync(_wid, _wval, f, _site_relative_dir, _name, null);
        }
        
        /// <remarks/>
        public void UploadFileAsync(int _wid, string _wval, byte[] f, string _site_relative_dir, string _name, object userState) {
            if ((this.UploadFileOperationCompleted == null)) {
                this.UploadFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadFileOperationCompleted);
            }
            this.InvokeAsync("UploadFile", new object[] {
                        _wid,
                        _wval,
                        f,
                        _site_relative_dir,
                        _name}, this.UploadFileOperationCompleted, userState);
        }
        
        private void OnUploadFileOperationCompleted(object arg) {
            if ((this.UploadFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadFileCompleted(this, new UploadFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RenameFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RenameFile(int _wid, string _wval, string _site_relative_dir, string _name_old, string _name_new) {
            object[] results = this.Invoke("RenameFile", new object[] {
                        _wid,
                        _wval,
                        _site_relative_dir,
                        _name_old,
                        _name_new});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RenameFileAsync(int _wid, string _wval, string _site_relative_dir, string _name_old, string _name_new) {
            this.RenameFileAsync(_wid, _wval, _site_relative_dir, _name_old, _name_new, null);
        }
        
        /// <remarks/>
        public void RenameFileAsync(int _wid, string _wval, string _site_relative_dir, string _name_old, string _name_new, object userState) {
            if ((this.RenameFileOperationCompleted == null)) {
                this.RenameFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRenameFileOperationCompleted);
            }
            this.InvokeAsync("RenameFile", new object[] {
                        _wid,
                        _wval,
                        _site_relative_dir,
                        _name_old,
                        _name_new}, this.RenameFileOperationCompleted, userState);
        }
        
        private void OnRenameFileOperationCompleted(object arg) {
            if ((this.RenameFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RenameFileCompleted(this, new RenameFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteFile(int _wid, string _wval, string _path_to_file) {
            object[] results = this.Invoke("DeleteFile", new object[] {
                        _wid,
                        _wval,
                        _path_to_file});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFileAsync(int _wid, string _wval, string _path_to_file) {
            this.DeleteFileAsync(_wid, _wval, _path_to_file, null);
        }
        
        /// <remarks/>
        public void DeleteFileAsync(int _wid, string _wval, string _path_to_file, object userState) {
            if ((this.DeleteFileOperationCompleted == null)) {
                this.DeleteFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFileOperationCompleted);
            }
            this.InvokeAsync("DeleteFile", new object[] {
                        _wid,
                        _wval,
                        _path_to_file}, this.DeleteFileOperationCompleted, userState);
        }
        
        private void OnDeleteFileOperationCompleted(object arg) {
            if ((this.DeleteFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFileCompleted(this, new DeleteFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteFileName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteFileName(int _wid, string _wval, string _site_relative_dir, string _name) {
            object[] results = this.Invoke("DeleteFileName", new object[] {
                        _wid,
                        _wval,
                        _site_relative_dir,
                        _name});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFileNameAsync(int _wid, string _wval, string _site_relative_dir, string _name) {
            this.DeleteFileNameAsync(_wid, _wval, _site_relative_dir, _name, null);
        }
        
        /// <remarks/>
        public void DeleteFileNameAsync(int _wid, string _wval, string _site_relative_dir, string _name, object userState) {
            if ((this.DeleteFileNameOperationCompleted == null)) {
                this.DeleteFileNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFileNameOperationCompleted);
            }
            this.InvokeAsync("DeleteFileName", new object[] {
                        _wid,
                        _wval,
                        _site_relative_dir,
                        _name}, this.DeleteFileNameOperationCompleted, userState);
        }
        
        private void OnDeleteFileNameOperationCompleted(object arg) {
            if ((this.DeleteFileNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFileNameCompleted(this, new DeleteFileNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Exists", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Exists(int _wid, string _wval, string _site_relative_path) {
            object[] results = this.Invoke("Exists", new object[] {
                        _wid,
                        _wval,
                        _site_relative_path});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExistsAsync(int _wid, string _wval, string _site_relative_path) {
            this.ExistsAsync(_wid, _wval, _site_relative_path, null);
        }
        
        /// <remarks/>
        public void ExistsAsync(int _wid, string _wval, string _site_relative_path, object userState) {
            if ((this.ExistsOperationCompleted == null)) {
                this.ExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExistsOperationCompleted);
            }
            this.InvokeAsync("Exists", new object[] {
                        _wid,
                        _wval,
                        _site_relative_path}, this.ExistsOperationCompleted, userState);
        }
        
        private void OnExistsOperationCompleted(object arg) {
            if ((this.ExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExistsCompleted(this, new ExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class BrowserDirectory {
        
        private string nameField;
        
        private string extensionField;
        
        private System.DateTime creationTimeUTCField;
        
        private System.DateTime lastAccessTimeUTCField;
        
        private System.DateTime lastWriteTimeUTCField;
        
        private BrowserDirectory[] subDirectoriesField;
        
        private BrowserFile[] filesField;
        
        private string errorField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreationTimeUTC {
            get {
                return this.creationTimeUTCField;
            }
            set {
                this.creationTimeUTCField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastAccessTimeUTC {
            get {
                return this.lastAccessTimeUTCField;
            }
            set {
                this.lastAccessTimeUTCField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastWriteTimeUTC {
            get {
                return this.lastWriteTimeUTCField;
            }
            set {
                this.lastWriteTimeUTCField = value;
            }
        }
        
        /// <remarks/>
        public BrowserDirectory[] SubDirectories {
            get {
                return this.subDirectoriesField;
            }
            set {
                this.subDirectoriesField = value;
            }
        }
        
        /// <remarks/>
        public BrowserFile[] Files {
            get {
                return this.filesField;
            }
            set {
                this.filesField = value;
            }
        }
        
        /// <remarks/>
        public string Error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class BrowserFile {
        
        private string nameField;
        
        private string extensionField;
        
        private long lengthField;
        
        private bool readOnlyField;
        
        private System.DateTime creationTimeUTCField;
        
        private System.DateTime lastAccessTimeUTCField;
        
        private System.DateTime lastWriteTimeUTCField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
            }
        }
        
        /// <remarks/>
        public long Length {
            get {
                return this.lengthField;
            }
            set {
                this.lengthField = value;
            }
        }
        
        /// <remarks/>
        public bool ReadOnly {
            get {
                return this.readOnlyField;
            }
            set {
                this.readOnlyField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreationTimeUTC {
            get {
                return this.creationTimeUTCField;
            }
            set {
                this.creationTimeUTCField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastAccessTimeUTC {
            get {
                return this.lastAccessTimeUTCField;
            }
            set {
                this.lastAccessTimeUTCField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastWriteTimeUTC {
            get {
                return this.lastWriteTimeUTCField;
            }
            set {
                this.lastWriteTimeUTCField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void VersionCompletedEventHandler(object sender, VersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddDirectoryCompletedEventHandler(object sender, AddDirectoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddDirectoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddDirectoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RenameDirectoryNameCompletedEventHandler(object sender, RenameDirectoryNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RenameDirectoryNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RenameDirectoryNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RenameDirectoryCompletedEventHandler(object sender, RenameDirectoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RenameDirectoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RenameDirectoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteDirectoryCompletedEventHandler(object sender, DeleteDirectoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDirectoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDirectoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteDirectoryNameCompletedEventHandler(object sender, DeleteDirectoryNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDirectoryNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDirectoryNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDirectoryCompletedEventHandler(object sender, GetDirectoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDirectoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDirectoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BrowserDirectory Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BrowserDirectory)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void JSONCompletedEventHandler(object sender, JSONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class JSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal JSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UploadFileCompletedEventHandler(object sender, UploadFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RenameFileCompletedEventHandler(object sender, RenameFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RenameFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RenameFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteFileCompletedEventHandler(object sender, DeleteFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteFileNameCompletedEventHandler(object sender, DeleteFileNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFileNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFileNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ExistsCompletedEventHandler(object sender, ExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591